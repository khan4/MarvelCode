apply plugin: 'com.android.application'
apply plugin: "de.mannodermaus.android-junit5"
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'
android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.example.marvelcoding"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'

    // -------- LOCAL UNIT TESTS (use JUnit5)
    // JUnit Jupiter
    def junit_jupiter_version = "5.3.2"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit_jupiter_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"

    //Espresso
    def androidx_test_espresso = "3.1.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidx_test_espresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$androidx_test_espresso"
    implementation "androidx.test.espresso:espresso-idling-resource:$androidx_test_espresso"

    // Mockk.io
  //  def mockk_version = "1.9.3"
  //  androidTestImplementation "io.mockk:mockk-android:$mockk_version"
    implementation 'org.mockito:mockito-core:2.19.0'
    androidTestImplementation "android.arch.core:core-testing:1.1.1"
    androidTestImplementation 'org.mockito:mockito-android:2.19.0'


    // androidx.test
    def androidx_test = "1.1.0"
    androidTestImplementation "androidx.test:runner:$androidx_test"
    androidTestImplementation "androidx.test:core:$androidx_test"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidx_test"

    //Dagger Dependencies
    implementation 'com.google.dagger:dagger:2.24'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.24'
    kapt 'com.google.dagger:dagger-compiler:2.24'
    implementation 'com.google.dagger:dagger-android-support:2.24'
    implementation 'com.google.dagger:dagger-android:2.24'
    implementation 'com.google.dagger:dagger-android-support:2.24'
    // if you use the support libraries
    kapt 'com.google.dagger:dagger-android-processor:2.24'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.24'
    compileOnly 'javax.annotation:jsr250-api:1.0'
    //Dagger 2 kotlin dependencies


    //View Model
    def lifecycle_version = '2.1.0-alpha03'
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    //retrofit dependency
    implementation 'com.squareup.retrofit2:retrofit:2.6.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.0'


    //Rx Java
    def rxjava_version = '2.1.1'
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"


    // Rx-Retrofit Call Adapter
    def rxcalladapter_version = '2.5.0'
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rxcalladapter_version"
    // Retrofit call adapter

    //Reactive Streaming
    def reactivestreams_version = "1.1.1"
    implementation "android.arch.lifecycle:reactivestreams:$reactivestreams_version"
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'

    //Glide dependency
    implementation 'com.github.bumptech.glide:glide:4.10.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.10.0'
    kapt 'com.github.bumptech.glide:compiler:4.4.0'

    //Room Database Dependencies
   // def room_version = "2.2.3"
    //implementation "android.arch.persistence.room:runtime:2.1.0"
   // implementation "androidx.room:room-runtime:$room_version"
   // implementation "android.arch.lifecycle:extensions:2.1.0"
   // annotationProcessor "android.arch.persistence.room:compiler:2.1.0"
   // annotationProcessor 'android.arch.lifecycle:compiler:2.1.0'
   // kapt "android.arch.persistence.room:compiler:2.1.0"

    def room_version = "2.2.0-alpha02"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version" // For Java use annotationProcessor instead of kapt
    implementation "androidx.room:room-rxjava2:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"
    //nn
    implementation 'android.arch.persistence.room:runtime:2.1.0-alpha04'
    kapt 'android.arch.persistence.room:compiler:2.1.0-alpha04'
    implementation 'android.arch.persistence.room:rxjava2:2.1.0-alpha04'
}
